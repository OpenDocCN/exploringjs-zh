- en: 9 Assertion API
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 9 断言API
- en: 原文：[https://exploringjs.com/impatient-js/ch_assertion-api.html](https://exploringjs.com/impatient-js/ch_assertion-api.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://exploringjs.com/impatient-js/ch_assertion-api.html](https://exploringjs.com/impatient-js/ch_assertion-api.html)
- en: '* * *'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 9.1 [Assertions in software development](ch_assertion-api.html#assertions-in-software-development)
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 9.1 软件开发中的断言
- en: 9.2 [How assertions are used in this book](ch_assertion-api.html#how-assertions-are-used-in-this-book)
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 9.2 本书中如何使用断言
- en: 9.2.1 [Documenting results in code examples via assertions](ch_assertion-api.html#documenting-results-in-code-examples-via-assertions)
  id: totrans-5
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 9.2.1 通过断言在代码示例中记录结果
- en: 9.2.2 [Implementing test-driven exercises via assertions](ch_assertion-api.html#implementing-test-driven-exercises-via-assertions)
  id: totrans-6
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 9.2.2 通过断言实现测试驱动的练习
- en: 9.3 [Normal comparison vs. deep comparison](ch_assertion-api.html#normal-comparison-vs.-deep-comparison)
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 9.3 [普通比较 vs. 深度比较](ch_assertion-api.html#normal-comparison-vs.-deep-comparison)
- en: '9.4 [Quick reference: module `assert`](ch_assertion-api.html#quick-reference-module-assert)'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 9.4 [快速参考：模块`assert`](ch_assertion-api.html#quick-reference-module-assert)
- en: 9.4.1 [Normal equality](ch_assertion-api.html#normal-equality)
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 9.4.1 普通相等
- en: 9.4.2 [Deep equality](ch_assertion-api.html#deep-equality)
  id: totrans-10
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 9.4.2 深度相等
- en: 9.4.3 [Expecting exceptions](ch_assertion-api.html#expecting-exceptions)
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 9.4.3 期望异常
- en: 9.4.4 [Another tool function](ch_assertion-api.html#another-tool-function)
  id: totrans-12
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 9.4.4 [另一个工具函数](ch_assertion-api.html#another-tool-function)
- en: '* * *'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 9.1 Assertions in software development
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 9.1 软件开发中的断言
- en: 'In software development, *assertions* state facts about values or pieces of
    code that must be true. If they aren’t, an exception is thrown. Node.js supports
    assertions via its built-in module `assert` – for example:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在软件开发中，*断言*陈述关于值或代码片段的事实，这些事实必须为真。如果不是，将抛出异常。Node.js通过其内置模块`assert`支持断言-例如：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This assertion states that the expected result of 3 plus 5 is 8\. The import
    statement uses [the recommended `strict` version](https://nodejs.org/api/assert.html#assert_strict_mode)
    of `assert`.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 此断言陈述了3加5的预期结果为8。导入语句使用了`assert`的[推荐的`strict`版本](https://nodejs.org/api/assert.html#assert_strict_mode)。
- en: 9.2 How assertions are used in this book
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 9.2 本书中如何使用断言
- en: 'In this book, assertions are used in two ways: to document results in code
    examples and to implement test-driven exercises.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，断言有两种用法：用于记录代码示例中的结果，以及实现测试驱动的练习。
- en: 9.2.1 Documenting results in code examples via assertions
  id: totrans-20
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 9.2.1 通过断言在代码示例中记录结果
- en: 'In code examples, assertions express expected results. Take, for example, the
    following function:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在代码示例中，断言表达了预期的结果。例如，以下函数：
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '`id()` returns its parameter. We can show it in action via an assertion:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '`id()`返回其参数。我们可以通过断言展示它的作用：'
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In the examples, I usually omit the statement for importing `assert`.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在示例中，我通常省略了导入`assert`的语句。
- en: 'The motivation behind using assertions is:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 使用断言的动机是：
- en: You can specify precisely what is expected.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以明确指定预期的内容。
- en: Code examples can be tested automatically, which ensures that they really work.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码示例可以自动测试，这确保它们确实有效。
- en: 9.2.2 Implementing test-driven exercises via assertions
  id: totrans-29
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 9.2.2 通过断言实现测试驱动的练习
- en: The exercises for this book are test-driven, via the test framework Mocha. Checks
    inside the tests are made via methods of `assert`.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的练习是通过测试框架Mocha进行测试驱动的。测试中的检查是通过`assert`的方法进行的。
- en: 'The following is an example of such a test:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是这样一个测试的示例：
- en: '[PRE3]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: For more information, consult [§10 “Getting started with quizzes and exercises”](ch_quizzes-exercises.html).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 有关更多信息，请参阅[§10“开始使用测验和练习”](ch_quizzes-exercises.html)。
- en: 9.3 Normal comparison vs. deep comparison
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 9.3 普通比较 vs. 深度比较
- en: 'The strict `equal()` uses `===` to compare values. Therefore, an object is
    only equal to itself – even if another object has the same content (because `===`
    does not compare the contents of objects, only their identities):'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 严格的`equal()`使用`===`来比较值。因此，对象只等于自身-即使另一个对象具有相同的内容（因为`===`不比较对象的内容，只比较它们的标识）：
- en: '[PRE4]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '`deepEqual()` is a better choice for comparing objects:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '`deepEqual()`是比较对象的更好选择：'
- en: '[PRE5]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This method works for Arrays, too:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法也适用于数组：
- en: '[PRE6]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '9.4 Quick reference: module `assert`'
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 9.4 模块`assert`的快速参考
- en: For the full documentation, see [the Node.js docs](https://nodejs.org/api/assert.html).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 有关完整文档，请参阅[Node.js文档](https://nodejs.org/api/assert.html)。
- en: 9.4.1 Normal equality
  id: totrans-43
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 9.4.1 普通相等
- en: '`function equal(actual: any, expected: any, message?: string): void`'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`function equal(actual: any, expected: any, message?: string): void`'
- en: '`actual === expected` must be `true`. If not, an `AssertionError` is thrown.'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`actual === expected`必须为`true`。如果不是，则抛出`AssertionError`。'
- en: '[PRE7]'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '`function notEqual(actual: any, expected: any, message?: string): void`'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`function notEqual(actual: any, expected: any, message?: string): void`'
- en: '`actual !== expected` must be `true`. If not, an `AssertionError` is thrown.'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`actual !== expected`必须为`true`。如果不是，则抛出`AssertionError`。'
- en: '[PRE8]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The optional last parameter `message` can be used to explain what is asserted.
    If the assertion fails, the message is used to set up the `AssertionError` that
    is thrown.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 可选的最后一个参数`message`可用于解释所断言的内容。如果断言失败，将使用消息设置抛出的`AssertionError`。
- en: '[PRE9]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 9.4.2 Deep equality
  id: totrans-52
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 9.4.2 深度相等
- en: '`function deepEqual(actual: any, expected: any, message?: string): void`'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`function deepEqual(actual: any, expected: any, message?: string): void`'
- en: '`actual` must be deeply equal to `expected`. If not, an `AssertionError` is
    thrown.'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`actual`必须是深度等于`expected`。如果不是，则抛出`AssertionError`。'
- en: '[PRE10]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '`function notDeepEqual(actual: any, expected: any, message?: string): void`'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`function notDeepEqual(actual: any, expected: any, message?: string): void`'
- en: '`actual` must not be deeply equal to `expected`. If it is, an `AssertionError`
    is thrown.'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`actual`必须不是深度等于`expected`。如果是，则抛出`AssertionError`。'
- en: '[PRE11]'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 9.4.3 Expecting exceptions
  id: totrans-59
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 9.4.3 期望异常
- en: 'If you want to (or expect to) receive an exception, you need `throws()`: This
    function calls its first parameter, the function `block`, and only succeeds if
    it throws an exception. Additional parameters can be used to specify what that
    exception must look like.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要（或期望）收到一个异常，你需要使用`throws()`：这个函数调用它的第一个参数，函数`block`，只有在它抛出异常时才成功。可以使用额外的参数来指定异常的样子。
- en: '`function throws(block: Function, message?: string): void`'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`function throws(block: Function, message?: string): void`'
- en: '[PRE12]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '`function throws(block: Function, error: Function, message?: string): void`'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`function throws(block: Function, error: Function, message?: string): void`'
- en: '[PRE13]'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '`function throws(block: Function, error: RegExp, message?: string): void`'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`function throws(block: Function, error: RegExp, message?: string): void`'
- en: '[PRE14]'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '`function throws(block: Function, error: Object, message?: string): void`'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`function throws(block: Function, error: Object, message?: string): void`'
- en: '[PRE15]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 9.4.4 Another tool function
  id: totrans-69
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 9.4.4 另一个工具函数
- en: '`function fail(message: string | Error): never`'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`function fail(message: string | Error): never`'
- en: Always throws an `AssertionError` when it is called. That is occasionally useful
    for unit testing.
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 每次调用时都会抛出一个`AssertionError`。这在单元测试中偶尔是有用的。
- en: '[PRE16]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![](../Images/4ca05ad97a693bee61e4fd6459232e60.png)  **Quiz**'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '![](../Images/4ca05ad97a693bee61e4fd6459232e60.png)  **测验**'
- en: See [quiz app](ch_quizzes-exercises.html#quizzes).
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅[测验应用](ch_quizzes-exercises.html#quizzes)。
- en: '[Comments](https://github.com/rauschma/impatient-js/issues/3)'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](https://github.com/rauschma/impatient-js/issues/3)'
