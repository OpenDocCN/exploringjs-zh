- en: 3 Getting started with Node.js
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3 开始使用Node.js
- en: 原文：[https://exploringjs.com/nodejs-shell-scripting/ch_getting-started-with-nodejs.html](https://exploringjs.com/nodejs-shell-scripting/ch_getting-started-with-nodejs.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://exploringjs.com/nodejs-shell-scripting/ch_getting-started-with-nodejs.html](https://exploringjs.com/nodejs-shell-scripting/ch_getting-started-with-nodejs.html)
- en: '* * *'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 3.1 [Getting help for Node.js](ch_getting-started-with-nodejs.html#getting-help-for-node.js)
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 3.1 [获取Node.js的帮助](ch_getting-started-with-nodejs.html#getting-help-for-node.js)
- en: 3.2 [Installing Node.js and npm](ch_getting-started-with-nodejs.html#installing-node.js-and-npm)
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 3.2 [安装Node.js和npm](ch_getting-started-with-nodejs.html#installing-node.js-and-npm)
- en: 3.3 [Running Node.js code](ch_getting-started-with-nodejs.html#running-node.js-code)
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 3.3 [运行Node.js代码](ch_getting-started-with-nodejs.html#running-node.js-code)
- en: 3.3.1 [Evaluating code in the Node.js REPL](ch_getting-started-with-nodejs.html#evaluating-code-in-the-node.js-repl)
  id: totrans-6
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 3.3.1 [在Node.js REPL中评估代码](ch_getting-started-with-nodejs.html#evaluating-code-in-the-node.js-repl)
- en: 3.3.2 [Quickly printing the result of a JavaScript expression](ch_getting-started-with-nodejs.html#quickly-printing-the-result-of-a-javascript-expression)
  id: totrans-7
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 3.3.2 [快速打印JavaScript表达式的结果](ch_getting-started-with-nodejs.html#quickly-printing-the-result-of-a-javascript-expression)
- en: 3.3.3 [Running modules with Node.js code](ch_getting-started-with-nodejs.html#running-modules-with-node.js-code)
  id: totrans-8
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 3.3.3 [使用Node.js代码运行模块](ch_getting-started-with-nodejs.html#running-modules-with-node.js-code)
- en: 3.3.4 [Running Node.js code that’s in the clipboard](ch_getting-started-with-nodejs.html#running-node.js-code-thats-in-the-clipboard)
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 3.3.4 [运行剪贴板中的Node.js代码](ch_getting-started-with-nodejs.html#running-node.js-code-thats-in-the-clipboard)
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: This chapter explains the first steps with Node.js.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了Node.js的第一步。
- en: 3.1 Getting help for Node.js
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.1 获取Node.js的帮助
- en: 'Online:'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在线：
- en: '[Overview of online documentation](https://nodejs.org/en/docs/)'
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[在线文档概述](https://nodejs.org/en/docs/)'
- en: '[API documentation](https://nodejs.org/api/)'
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[API文档](https://nodejs.org/api/)'
- en: '[Command line options](https://nodejs.org/api/cli.html)'
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[命令行选项](https://nodejs.org/api/cli.html)'
- en: 'Command line:'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 命令行：
- en: 'Print online help: `node -h`'
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在线帮助：`node -h`
- en: 'Print version of Node.js: `node -v`'
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打印Node.js的版本：`node -v`
- en: 'Print versions of various Node.js components:'
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 各种Node.js组件的打印版本：
- en: '`npm version`'
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`npm version`'
- en: '`node -p process.versions`'
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`node -p process.versions`'
- en: 3.2 Installing Node.js and npm
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.2 安装Node.js和npm
- en: The installer for Node.js also installs the package manager npm. It can be downloaded
    from [the Node.js homepage](https://nodejs.org/) and is available for many operating
    systems.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Node.js的安装程序还安装了包管理器npm。它可以从[Node.js主页](https://nodejs.org/)下载，并适用于许多操作系统。
- en: 3.3 Running Node.js code
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.3 运行Node.js代码
- en: 3.3.1 Evaluating code in the Node.js REPL
  id: totrans-26
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 3.3.1 在Node.js REPL中评估代码
- en: The Node.js REPL (read-eval-print loop) is a command line where we can interactively
    evaluate Node.js code.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Node.js REPL（读取-求值-打印循环）是一个命令行，我们可以交互式地评估Node.js代码。
- en: 'We can start the Node.js REPL in [JavaScript strict mode](https://exploringjs.com/impatient-js/ch_syntax.html#strict-mode)
    (which is safer and switched on by default for code in ESM modules):'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在[JavaScript严格模式](https://exploringjs.com/impatient-js/ch_syntax.html#strict-mode)下启动Node.js
    REPL（默认情况下，对于ESM模块中的代码，它更安全且已打开）：
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'If we run `node` without any arguments, the Node.js REPL does not use strict
    mode:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们运行`node`而不带任何参数，Node.js REPL将不使用严格模式：
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This is what using the Node.js REPL looks like (`%` is a Unix shell prompt,
    `>` is the Node.js REPL prompt):'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这是使用Node.js REPL的样子（`%`是Unix shell提示，`>`是Node.js REPL提示）：
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'All of Node’s built-in modules are available via global variables in the REPL:
    `assert`, `path`, `fs`, `util`, etc.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 所有Node的内置模块都可以通过REPL中的全局变量访问：`assert`，`path`，`fs`，`util`等。
- en: 3.3.2 Quickly printing the result of a JavaScript expression
  id: totrans-35
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 3.3.2 快速打印JavaScript表达式的结果
- en: 'We can use the shell command `node` with the option `--print` (abbreviation:
    `-p`) to print the result of evaluating a JavaScript expression. Similarly to
    the REPL, all built-in modules are available via global variables. For example,
    the following command prints the path of the homedirectory and works on both Unixes
    and Windows:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用带有选项`--print`（缩写：`-p`）的shell命令`node`来打印评估JavaScript表达式的结果。类似于REPL，所有内置模块都可以通过全局变量访问。例如，以下命令打印主目录的路径，并且在Unix和Windows上都有效：
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: For more information on this command line option, see [§15.7.7 “`node --eval`
    and `node --print`”](ch_package-scripts.html#node-eval-node-print).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 有关此命令行选项的更多信息，请参见[§15.7.7“`node --eval`和`node --print`”](ch_package-scripts.html#node-eval-node-print)。
- en: 3.3.3 Running modules with Node.js code
  id: totrans-39
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 3.3.3 使用Node.js代码运行模块
- en: 'Take, for example, the following module:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，以下模块：
- en: '[PRE4]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We can run it from a shell via:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过shell来运行它：
- en: '[PRE5]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 3.3.4 Running Node.js code that’s in the clipboard
  id: totrans-44
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 3.3.4 运行剪贴板中的Node.js代码
- en: 'We can also run Node.js code that we have copied to the clipboard. For example,
    we could copy the code of `my-module.mjs` from the previous section and run it
    like this on macOS:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以运行我们从剪贴板复制的Node.js代码。例如，我们可以从上一节复制`my-module.mjs`的代码，然后在macOS上像这样运行它：
- en: '[PRE6]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Option `--input-type=module` tells Node.js to interpret the code it receives
    from standard input as a module. Among other things, that enables us to use `import`.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 选项`--input-type=module`告诉Node.js将从标准输入接收的代码解释为模块。除其他外，这使我们可以使用`import`。
- en: 'The macOS shell command `pbpaste` sends the contents of the clipboard to standard
    output. Other operating systems have similar shell commands:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: macOS shell命令`pbpaste`将剪贴板的内容发送到标准输出。其他操作系统也有类似的shell命令：
- en: 'Windows Command shell: `powershell get-clipboard`'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows命令行：`powershell get-clipboard`
- en: 'Windows PowerShell: `get-clipboard`'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows PowerShell：`get-clipboard`
- en: 'Linux: [`xclip`](https://github.com/astrand/xclip)'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux：[`xclip`](https://github.com/astrand/xclip)
- en: '[Comments](https://github.com/rauschma/nodejs-shell-scripting/issues/3)'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](https://github.com/rauschma/nodejs-shell-scripting/issues/3)'
