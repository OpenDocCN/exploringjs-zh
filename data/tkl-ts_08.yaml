- en: 6 Notation used in this book
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 6 本书中使用的符号
- en: 原文：[https://exploringjs.com/tackling-ts/ch_book-notation.html](https://exploringjs.com/tackling-ts/ch_book-notation.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://exploringjs.com/tackling-ts/ch_book-notation.html](https://exploringjs.com/tackling-ts/ch_book-notation.html)
- en: '* * *'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 6.1 [Test assertions (dynamic)](ch_book-notation.html#test-assertions-dynamic)
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 6.1 测试断言（动态）(ch_book-notation.html#test-assertions-dynamic)
- en: 6.2 [Type assertions (static)](ch_book-notation.html#type-assertions-static)
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 6.2 [类型断言（静态）](ch_book-notation.html#type-assertions-static)
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: This chapter explains functionality that is used in the code examples, but not
    part of TypeScript proper.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章解释了代码示例中使用的功能，但不是TypeScript本身的一部分。
- en: 6.1 Test assertions (dynamic)
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 6.1 测试断言（动态）
- en: 'The code examples shown in this book are tested automatically via unit tests.
    Expected results of operations are checked via the following assertion functions
    from [the Node.js module `assert`](https://nodejs.org/api/assert.html):'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中显示的代码示例通过单元测试自动测试。操作的预期结果通过来自[Node.js模块`assert`](https://nodejs.org/api/assert.html)的以下断言函数进行检查：
- en: '`assert.equal()` tests equality via `===`'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`assert.equal()`通过`===`测试相等性'
- en: '`assert.deepEqual()` tests equality by deeply comparing nested objects (incl. Arrays).'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`assert.deepEqual()`通过深度比较嵌套对象（包括数组）来测试相等性。'
- en: '`assert.throws()` complains if the callback parameter does *not* throw an exception.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`assert.throws()`如果回调参数*没有*抛出异常，则会报错。'
- en: 'This is an example of using these assertions:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这是使用这些断言的一个例子：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The import statement in the first line makes use of [strict assertion mode](https://nodejs.org/api/assert.html#assert_strict_assertion_mode)
    (which uses `===`, not `==`). It is usually omitted in code examples.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行的import语句使用了严格断言模式（使用`===`而不是`==`）。通常在代码示例中会省略这一行。
- en: 6.2 Type assertions (static)
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 6.2 类型断言（静态）
- en: You’ll also see static type assertions.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 您还会看到静态类型断言。
- en: '`%inferred-type` is just a comment in normal TypeScript and describes the type
    that TypeScript infers for the following line:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '`%inferred-type`只是普通TypeScript中的一个注释，描述了TypeScript为下一行推断的类型：'
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '`@ts-expect-error` suppresses static errors in TypeScript. In this book, the
    suppressed error is always mentioned. That is neither required in plain TypeScript,
    nor does it do anything there.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '`@ts-expect-error`在TypeScript中抑制静态错误。在本书中，抑制的错误总是会被提及。这在普通的TypeScript中既不是必需的，也不会有任何作用。'
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Note that we previously needed `eval()` in order to not be warned by TypeScript.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们以前需要使用`eval()`来避免TypeScript的警告。
- en: '[Comments](https://github.com/rauschma/tackling-ts/issues/6)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](https://github.com/rauschma/tackling-ts/issues/6)'
