- en: 36 WeakSets (WeakSet) (advanced)
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 36 WeakSets (WeakSet) (advanced)
- en: 原文：[https://exploringjs.com/impatient-js/ch_weaksets.html](https://exploringjs.com/impatient-js/ch_weaksets.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://exploringjs.com/impatient-js/ch_weaksets.html](https://exploringjs.com/impatient-js/ch_weaksets.html)
- en: '* * *'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '36.1 [Example: Marking objects as safe to use with a method](ch_weaksets.html#example-marking-objects-as-safe-to-use-with-a-method)'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 36.1 [示例：将对象标记为可与方法一起使用](ch_weaksets.html#example-marking-objects-as-safe-to-use-with-a-method)
- en: 36.2 [WeakSet API](ch_weaksets.html#weakset-api)
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 36.2 [WeakSet API](ch_weaksets.html#weakset-api)
- en: '* * *'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'WeakSets are similar to Sets, with the following differences:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: WeakSets类似于Sets，具有以下区别：
- en: They can hold objects without preventing those objects from being garbage-collected.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们可以在不阻止这些对象被垃圾回收的情况下持有对象。
- en: 'They are black boxes: we only get any data out of a WeakSet if we have both
    the WeakSet and a value. The only methods that are supported are `.add()`, `.delete()`,
    `.has()`. Consult the section on [WeakMaps as black boxes](ch_weakmaps.html#weakmaps-as-black-boxes)
    for an explanation of why WeakSets don’t allow iteration, looping, and clearing.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们是黑匣子：我们只有在拥有WeakSet和一个值的情况下才能从WeakSet中获取任何数据。支持的唯一方法是`.add()`、`.delete()`、`.has()`。请参阅[WeakMaps作为黑匣子](ch_weakmaps.html#weakmaps-as-black-boxes)一节，了解为什么WeakSets不允许迭代、循环和清除。
- en: Given that we can’t iterate over their elements, there are not that many use
    cases for WeakSets. They do enable us to mark objects.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于我们无法遍历它们的元素，WeakSets的用例并不那么多。它们确实使我们能够标记对象。
- en: '36.1 Example: Marking objects as safe to use with a method'
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 36.1 示例：将对象标记为可与方法一起使用
- en: 'The following code demonstrates how a class can ensure that its methods are
    only applied to instances that were created by it (based on [code by Domenic Denicola](https://mail.mozilla.org/pipermail/es-discuss/2015-June/043027.html)):'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码演示了一个类如何确保其方法仅应用于由它创建的实例（基于[Domenic Denicola的代码](https://mail.mozilla.org/pipermail/es-discuss/2015-June/043027.html)）：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 36.2 WeakSet API
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 36.2 WeakSet API
- en: 'The constructor and the three methods of `WeakSet` work the same as [their
    `Set` equivalents](ch_sets.html#quickref-sets):'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '`WeakSet`的构造函数和三个方法与它们的`Set`等效方法的工作方式相同（参见[ch_sets.html#quickref-sets](ch_sets.html#quickref-sets)）：'
- en: '`new WeakSet<T>(values?: Iterable<T>)` ^([ES6])'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`new WeakSet<T>(values?: Iterable<T>)` ^([ES6])'
- en: '`.add(value: T): this` ^([ES6])'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.add(value: T): this` ^([ES6])'
- en: '`.delete(value: T): boolean` ^([ES6])'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.delete(value: T): boolean` ^([ES6])'
- en: '`.has(value: T): boolean` ^([ES6])'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.has(value: T): boolean` ^([ES6])'
- en: '[Comments](https://github.com/rauschma/impatient-js/issues/38)'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[评论](https://github.com/rauschma/impatient-js/issues/38)'
