- en: 36 WeakSets (WeakSet) (advanced)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://exploringjs.com/impatient-js/ch_weaksets.html](https://exploringjs.com/impatient-js/ch_weaksets.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '36.1 [Example: Marking objects as safe to use with a method](ch_weaksets.html#example-marking-objects-as-safe-to-use-with-a-method)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 36.2 [WeakSet API](ch_weaksets.html#weakset-api)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: 'WeakSets are similar to Sets, with the following differences:'
  prefs: []
  type: TYPE_NORMAL
- en: They can hold objects without preventing those objects from being garbage-collected.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'They are black boxes: we only get any data out of a WeakSet if we have both
    the WeakSet and a value. The only methods that are supported are `.add()`, `.delete()`,
    `.has()`. Consult the section on [WeakMaps as black boxes](ch_weakmaps.html#weakmaps-as-black-boxes)
    for an explanation of why WeakSets don’t allow iteration, looping, and clearing.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Given that we can’t iterate over their elements, there are not that many use
    cases for WeakSets. They do enable us to mark objects.
  prefs: []
  type: TYPE_NORMAL
- en: '36.1 Example: Marking objects as safe to use with a method'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The following code demonstrates how a class can ensure that its methods are
    only applied to instances that were created by it (based on [code by Domenic Denicola](https://mail.mozilla.org/pipermail/es-discuss/2015-June/043027.html)):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 36.2 WeakSet API
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The constructor and the three methods of `WeakSet` work the same as [their
    `Set` equivalents](ch_sets.html#quickref-sets):'
  prefs: []
  type: TYPE_NORMAL
- en: '`new WeakSet<T>(values?: Iterable<T>)` ^([ES6])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`.add(value: T): this` ^([ES6])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`.delete(value: T): boolean` ^([ES6])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`.has(value: T): boolean` ^([ES6])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Comments](https://github.com/rauschma/impatient-js/issues/38)'
  prefs: []
  type: TYPE_NORMAL
