["```js\n> eval('2 ** 4')\n16\n```", "```js\nglobalThis.myVariable = 'global';\nfunction func() {\n const myVariable = 'local';\n\n // Direct eval\n assert.equal(eval('myVariable'), 'local');\n\n // Indirect eval\n assert.equal(eval.call(undefined, 'myVariable'), 'global');\n}\n```", "```js\nconst func = new Function('\u00abparam_1\u00bb', \u00b7\u00b7\u00b7, '\u00abparam_n\u00bb', '\u00abfunc_body\u00bb');\n```", "```js\nconst func = function (\u00abparam_1\u00bb, \u00b7\u00b7\u00b7, \u00abparam_n\u00bb) {\n \u00abfunc_body\u00bb\n};\n```", "```js\nconst times1 = new Function('a', 'b', 'return a * b');\nconst times2 = function (a, b) { return a * b };\n```", "```js\nconst obj = {a: 1, b: 2};\nconst propKey = 'b';\n\nassert.equal(eval('obj.' + propKey), 2); // (A)\nassert.equal(obj[propKey], 2); // (B)\n```"]