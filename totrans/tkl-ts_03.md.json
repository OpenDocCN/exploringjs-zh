["```ts\nfunction func() {}\nfuncc();\n```", "```ts\nCannot find name 'funcc'. Did you mean 'func'?\n```", "```ts\nconst a = 0;\nconst b = true;\nconst result = a + b;\n```", "```ts\nOperator '+' cannot be applied to types 'number' and 'boolean'.\n```", "```ts\n/**\n * @param  {number} num - The number to convert to string\n * @returns {string} `num`, converted to string\n */\nfunction toString(num) {\n return String(num);\n}\n```", "```ts\nfunction toString(num: number): string {\n return String(num);\n}\n```", "```ts\nfunction selectionSort(arr: number[]) { // (A)\n for (let i=0; i<arr.length; i++) {\n const minIndex = findMinIndex(arr, i);\n [arr[i], arr[minIndex]] = [arr[minIndex], arr[i]]; // swap\n }\n}\n\nfunction findMinIndex(arr: number[], startIndex: number) { // (B)\n let minValue = arr[startIndex];\n let minIndex = startIndex;\n for (let i=startIndex+1; i < arr.length; i++) {\n const curValue = arr[i];\n if (curValue < minValue) {\n minValue = curValue;\n minIndex = i;\n }\n }\n return minIndex;\n}\n\nconst arr = [4, 2, 6, 3, 1, 5];\nselectionSort(arr);\nassert.deepEqual(\n arr, [1, 2, 3, 4, 5, 6]);\n```"]