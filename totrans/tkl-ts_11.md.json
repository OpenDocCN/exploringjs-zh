["```ts\nts-demo-webpack/\n  build/   (created on demand)\n  html/\n    index.html\n  package.json\n  ts/\n    src/\n      main.ts\n  tsconfig.json\n  webpack.config.js\n```", "```ts\n{\n \"private\": true,\n \"scripts\": {\n \"tsc\": \"tsc\",\n \"tscw\": \"tsc --watch\",\n \"wp\": \"webpack\",\n \"wpw\": \"webpack --watch\",\n \"serve\": \"http-server build\"\n },\n \"dependencies\": {\n \"@types/lodash\": \"\u00b7\u00b7\u00b7\",\n \"copy-webpack-plugin\": \"\u00b7\u00b7\u00b7\",\n \"http-server\": \"\u00b7\u00b7\u00b7\",\n \"lodash\": \"\u00b7\u00b7\u00b7\",\n \"ts-loader\": \"\u00b7\u00b7\u00b7\",\n \"typescript\": \"\u00b7\u00b7\u00b7\",\n \"webpack\": \"\u00b7\u00b7\u00b7\",\n \"webpack-cli\": \"\u00b7\u00b7\u00b7\"\n }\n}\n```", "```ts\nconst path = require('path');\nconst CopyWebpackPlugin = require('copy-webpack-plugin');\n\nmodule.exports = {\n \u00b7\u00b7\u00b7\n entry: {\n main: \"./ts/src/main.ts\",\n },\n output: {\n path: path.resolve(__dirname, 'build'),\n filename: \"[name]-bundle.js\",\n },\n resolve: {\n // Add \".ts\" and \".tsx\" as resolvable extensions.\n extensions: [\".ts\", \".tsx\", \".js\"],\n },\n module: {\n rules: [\n // all files with a `.ts` or `.tsx` extension will be handled by `ts-loader`\n { test: /\\.tsx?$/, loader: \"ts-loader\" },\n ],\n },\n plugins: [\n new CopyWebpackPlugin([\n {\n from: './html',\n }\n ]),\n ],\n};\n```", "```ts\n{\n \"compilerOptions\": {\n \"rootDir\": \"ts\",\n \"outDir\": \"dist\",\n \"target\": \"es2019\",\n \"lib\": [\n \"es2019\",\n \"dom\"\n ],\n \"module\": \"commonjs\",\n \"esModuleInterop\": true,\n \"strict\": true,\n \"sourceMap\": true\n }\n}\n```", "```ts\n<!doctype html>\n<html>\n<head>\n <meta charset=\"UTF-8\">\n <title>ts-demo-webpack</title>\n</head>\n<body>\n <div id=\"output\"></div>\n <script src=\"main-bundle.js\"></script>\n</body>\n</html>\n```", "```ts\nimport template from 'lodash/template';\n\nconst outputElement = document.getElementById('output');\nif (outputElement) {\n const compiled = template(`\n <h1><%- heading %></h1>\n Current date and time: <%- dateTimeString %>\n `.trim());\n outputElement.innerHTML = compiled({\n heading: 'ts-demo-webpack',\n dateTimeString: new Date().toISOString(),\n });\n}\n```", "```ts\nnpm install\n```", "```ts\nnpm run wpw\n```", "```ts\nnpm run serve\n```", "```ts\n    \"problemMatcher\": [\"$tsc-watch\"],\n    ```", "```ts\nconst path = require('path');\n\nmodule.exports = {\n entry: {\n main: \"./dist/src/main.js\",\n },\n output: {\n path: path.join(__dirname, 'build'),\n filename: '[name]-bundle.js',\n },\n plugins: [\n new CopyWebpackPlugin([\n {\n from: './html',\n }\n ]),\n ],\n};\n```", "```ts\n\"./ts/src/main.ts\"\n```"]