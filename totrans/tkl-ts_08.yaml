- en: 6 Notation used in this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://exploringjs.com/tackling-ts/ch_book-notation.html](https://exploringjs.com/tackling-ts/ch_book-notation.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: 6.1 [Test assertions (dynamic)](ch_book-notation.html#test-assertions-dynamic)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 6.2 [Type assertions (static)](ch_book-notation.html#type-assertions-static)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: This chapter explains functionality that is used in the code examples, but not
    part of TypeScript proper.
  prefs: []
  type: TYPE_NORMAL
- en: 6.1 Test assertions (dynamic)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The code examples shown in this book are tested automatically via unit tests.
    Expected results of operations are checked via the following assertion functions
    from [the Node.js module `assert`](https://nodejs.org/api/assert.html):'
  prefs: []
  type: TYPE_NORMAL
- en: '`assert.equal()` tests equality via `===`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`assert.deepEqual()` tests equality by deeply comparing nested objects (incl. Arrays).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`assert.throws()` complains if the callback parameter does *not* throw an exception.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This is an example of using these assertions:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The import statement in the first line makes use of [strict assertion mode](https://nodejs.org/api/assert.html#assert_strict_assertion_mode)
    (which uses `===`, not `==`). It is usually omitted in code examples.
  prefs: []
  type: TYPE_NORMAL
- en: 6.2 Type assertions (static)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You’ll also see static type assertions.
  prefs: []
  type: TYPE_NORMAL
- en: '`%inferred-type` is just a comment in normal TypeScript and describes the type
    that TypeScript infers for the following line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '`@ts-expect-error` suppresses static errors in TypeScript. In this book, the
    suppressed error is always mentioned. That is neither required in plain TypeScript,
    nor does it do anything there.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Note that we previously needed `eval()` in order to not be warned by TypeScript.
  prefs: []
  type: TYPE_NORMAL
- en: '[Comments](https://github.com/rauschma/tackling-ts/issues/6)'
  prefs: []
  type: TYPE_NORMAL
