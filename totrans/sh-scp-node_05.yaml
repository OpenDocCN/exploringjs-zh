- en: 3 Getting started with Node.js
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://exploringjs.com/nodejs-shell-scripting/ch_getting-started-with-nodejs.html](https://exploringjs.com/nodejs-shell-scripting/ch_getting-started-with-nodejs.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: 3.1 [Getting help for Node.js](ch_getting-started-with-nodejs.html#getting-help-for-node.js)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 3.2 [Installing Node.js and npm](ch_getting-started-with-nodejs.html#installing-node.js-and-npm)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 3.3 [Running Node.js code](ch_getting-started-with-nodejs.html#running-node.js-code)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 3.3.1 [Evaluating code in the Node.js REPL](ch_getting-started-with-nodejs.html#evaluating-code-in-the-node.js-repl)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 3.3.2 [Quickly printing the result of a JavaScript expression](ch_getting-started-with-nodejs.html#quickly-printing-the-result-of-a-javascript-expression)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 3.3.3 [Running modules with Node.js code](ch_getting-started-with-nodejs.html#running-modules-with-node.js-code)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 3.3.4 [Running Node.js code that’s in the clipboard](ch_getting-started-with-nodejs.html#running-node.js-code-thats-in-the-clipboard)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: This chapter explains the first steps with Node.js.
  prefs: []
  type: TYPE_NORMAL
- en: 3.1 Getting help for Node.js
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Online:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Overview of online documentation](https://nodejs.org/en/docs/)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[API documentation](https://nodejs.org/api/)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Command line options](https://nodejs.org/api/cli.html)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Command line:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Print online help: `node -h`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Print version of Node.js: `node -v`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Print versions of various Node.js components:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`npm version`'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`node -p process.versions`'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 3.2 Installing Node.js and npm
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The installer for Node.js also installs the package manager npm. It can be downloaded
    from [the Node.js homepage](https://nodejs.org/) and is available for many operating
    systems.
  prefs: []
  type: TYPE_NORMAL
- en: 3.3 Running Node.js code
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 3.3.1 Evaluating code in the Node.js REPL
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The Node.js REPL (read-eval-print loop) is a command line where we can interactively
    evaluate Node.js code.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can start the Node.js REPL in [JavaScript strict mode](https://exploringjs.com/impatient-js/ch_syntax.html#strict-mode)
    (which is safer and switched on by default for code in ESM modules):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'If we run `node` without any arguments, the Node.js REPL does not use strict
    mode:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'This is what using the Node.js REPL looks like (`%` is a Unix shell prompt,
    `>` is the Node.js REPL prompt):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'All of Node’s built-in modules are available via global variables in the REPL:
    `assert`, `path`, `fs`, `util`, etc.'
  prefs: []
  type: TYPE_NORMAL
- en: 3.3.2 Quickly printing the result of a JavaScript expression
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'We can use the shell command `node` with the option `--print` (abbreviation:
    `-p`) to print the result of evaluating a JavaScript expression. Similarly to
    the REPL, all built-in modules are available via global variables. For example,
    the following command prints the path of the homedirectory and works on both Unixes
    and Windows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: For more information on this command line option, see [§15.7.7 “`node --eval`
    and `node --print`”](ch_package-scripts.html#node-eval-node-print).
  prefs: []
  type: TYPE_NORMAL
- en: 3.3.3 Running modules with Node.js code
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Take, for example, the following module:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'We can run it from a shell via:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 3.3.4 Running Node.js code that’s in the clipboard
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'We can also run Node.js code that we have copied to the clipboard. For example,
    we could copy the code of `my-module.mjs` from the previous section and run it
    like this on macOS:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Option `--input-type=module` tells Node.js to interpret the code it receives
    from standard input as a module. Among other things, that enables us to use `import`.
  prefs: []
  type: TYPE_NORMAL
- en: 'The macOS shell command `pbpaste` sends the contents of the clipboard to standard
    output. Other operating systems have similar shell commands:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Windows Command shell: `powershell get-clipboard`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Windows PowerShell: `get-clipboard`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Linux: [`xclip`](https://github.com/astrand/xclip)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Comments](https://github.com/rauschma/nodejs-shell-scripting/issues/3)'
  prefs: []
  type: TYPE_NORMAL
