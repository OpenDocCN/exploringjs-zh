["```js\n    \"type\": \"module\"\n    ```", "```js\nimport * as os from 'node:os';\nconst {username} = os.userInfo();\nconsole.log(`Hello ${username}!`);\n```", "```js\nnode hello.mjs\n```", "```js\n./hello.mjs\n```", "```js\n#!/usr/bin/env node\n```", "```js\n#!/usr/bin/node\n```", "```js\n#!node\n```", "```js\n#!/usr/bin/env -S node --disable-proto=throw\n```", "```js\n#!/usr/bin/env node\\r\\n\n```", "```js\nenv: node\\r: No such file or directory\n```", "```js\n#!/usr/bin/env node\nimport './main.mjs';\n```", "```js\nchmod u+x hello.mjs\n```", "```js\n#!/usr/bin/env node\n\nimport * as os from 'node:os';\n\nconst {username} = os.userInfo();\nconsole.log(`Hello ${username}!`);\n```", "```js\n./hello.mjs\n```", "```js\nmkdir demo-shell-scripts\ncd demo-shell-scripts\nnpm init --yes\n```", "```js\ndemo-shell-scripts/\n  package.json\n```", "```js\n{\n \"private\": true,\n \"license\": \"UNLICENSED\"\n}\n```", "```js\n{\n \"name\": \"@rauschma/demo-shell-scripts\",\n \"version\": \"1.0.0\",\n \"license\": \"MIT\"\n}\n```", "```js\n    \"name\": \"@jane/demo-shell-scripts\"\n    ```", "```js\nnpm install lodash-es\n```", "```js\n    \"dependencies\": {\n     \"lodash-es\": \"^4.17.21\"\n    }\n    ```", "```js\ndemo-shell-scripts/\n  package.json\n  package-lock.json\n  README.md\n  src/\n    homedir.mjs\n    versions.mjs\n```", "```js\n\"bin\": {\n \"homedir\": \"./src/homedir.mjs\",\n \"versions\": \"./src/versions.mjs\"\n}\n```", "```js\n\"type\": \"module\",\n\"bin\": {\n \"homedir\": \"./src/homedir.js\",\n \"versions\": \"./src/versions.js\"\n}\n```", "```js\n#!/usr/bin/env node\nimport {homedir} from 'node:os';\n\nconsole.log('Homedir: ' + homedir());\n```", "```js\n#!/usr/bin/env node\n\nimport {pick} from 'lodash-es';\n\nconsole.log(\n pick(process.versions, ['node', 'v8', 'unicode'])\n);\n```", "```js\ncd demo-shell-scripts/\nnode src/homedir.mjs\n```", "```js\nnpm publish --dry-run\n```", "```js\nnpm pack\n```", "```js\nnpm link\nnpm install . -g\n```", "```js\nnpm ls -g\n```", "```js\ncd ..\nmkdir sibling-directory\ncd sibling-directory\nnpm init --yes\nnpm install ../demo-shell-scripts\n```", "```js\nnpx homedir\n./node_modules/.bin/homedir\n```", "```js\nnpm publish --access public\n```", "```js\n\"publishConfig\": {\n \"access\": \"public\"\n}\n```", "```js\nmajor.minor.patch\n```", "```js\n\"scripts\": {\n \"build\": \"tsc\",\n \"test\": \"mocha --ui qunit\",\n \"dry\": \"npm publish --dry-run\",\n \"prepublishOnly\": \"npm run test && npm run build\"\n}\n```", "```js\n#!/usr/bin/env node-esm\n```", "```js\n#!/usr/bin/env sh\ninput_file=$1\nshift\nexec node --input-type=module - $@ < $input_file\n```", "```js\n#!/bin/sh\n':' // ; cat \"$0\" | node --input-type=module - $@ ; exit $?\n\nimport * as os from 'node:os';\n\nconst {username} = os.userInfo();\nconsole.log(`Hello ${username}!`);\n```", "```js\n>more args.mjs\nconsole.log(process.argv);\n\n>.\\args.mjs one two\n[\n  'C:\\\\Program Files\\\\nodejs\\\\node.exe',\n  'C:\\\\Users\\\\jane\\\\args.mjs'\n]\n\n>node args.mjs one two\n[\n  'C:\\\\Program Files\\\\nodejs\\\\node.exe',\n  'C:\\\\Users\\\\jane\\\\args.mjs',\n  'one',\n  'two'\n]\n```", "```js\n:: /*\n@echo off\nmore +5 %~f0 | node --input-type=module - %*\nexit /b %errorlevel%\n*/\n\nimport * as os from 'node:os';\nconst {username} = os.userInfo();\nconsole.log(`Hello ${username}!`);\n```", "```js\nGet-Content $PSCommandPath | Select-Object -Skip 3 | node --input-type=module - $args\nexit $LastExitCode\n<#\nimport * as os from 'node:os';\nconst {username} = os.userInfo();\nconsole.log(`Hello ${username}!`);\n// #>\n```", "```js\n.\\hello.ps1\n.\\hello\n```", "```js\nSet-ExecutionPolicy -Scope CurrentUser RemoteSigned\n```", "```js\n$ echo $PATH\n/opt/homebrew/bin:/usr/local/bin:/usr/bin:/bin\n```", "```js\nexport PATH=\"$PATH:$HOME/bin\"\n```", "```js\necho $0\n```", "```js\npath+=('/Library/TeX/texbin')\nexport PATH\n```"]