- en: 10 Getting started with quizzes and exercises
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 10 开始使用测验和练习
- en: 原文：[https://exploringjs.com/impatient-js/ch_quizzes-exercises.html](https://exploringjs.com/impatient-js/ch_quizzes-exercises.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://exploringjs.com/impatient-js/ch_quizzes-exercises.html](https://exploringjs.com/impatient-js/ch_quizzes-exercises.html)
- en: '* * *'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 10.1 [Quizzes](ch_quizzes-exercises.html#quizzes)
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 10.1 [测验](ch_quizzes-exercises.html#quizzes)
- en: 10.2 [Exercises](ch_quizzes-exercises.html#exercises)
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 10.2 [练习](ch_quizzes-exercises.html#exercises)
- en: 10.2.1 [Installing the exercises](ch_quizzes-exercises.html#installing-the-exercises)
  id: totrans-5
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 10.2.1 [安装练习](ch_quizzes-exercises.html#installing-the-exercises)
- en: 10.2.2 [Running exercises](ch_quizzes-exercises.html#running-exercises)
  id: totrans-6
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 10.2.2 [运行练习](ch_quizzes-exercises.html#running-exercises)
- en: 10.3 [Unit tests in JavaScript](ch_quizzes-exercises.html#unit-tests-in-javascript)
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 10.3 JavaScript中的单元测试
- en: 10.3.1 [A typical test](ch_quizzes-exercises.html#a-typical-test)
  id: totrans-8
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 10.3.1 [典型测试](ch_quizzes-exercises.html#a-typical-test)
- en: 10.3.2 [Asynchronous tests in Mocha](ch_quizzes-exercises.html#async-tests-mocha)
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 10.3.2 [Mocha中的异步测试](ch_quizzes-exercises.html#async-tests-mocha)
- en: '* * *'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Throughout most chapters, there are quizzes and exercises. These are a paid
    feature, but a comprehensive preview is available. This chapter explains how to
    get started with them.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数章节中，都有测验和练习。这是一个付费功能，但提供了全面的预览。本章解释了如何开始使用它们。
- en: 10.1 Quizzes
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 10.1 测验
- en: 'Installation:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 安装：
- en: Download and unzip `impatient-js-quiz.zip`
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载并解压`impatient-js-quiz.zip`
- en: 'Running the quiz app:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 运行测验应用程序：
- en: Open `impatient-js-quiz/index.html` in a web browser
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Web浏览器中打开`impatient-js-quiz/index.html`
- en: You’ll see a TOC of all the quizzes.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你将看到所有测验的目录。
- en: 10.2 Exercises
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 10.2 练习
- en: 10.2.1 Installing the exercises
  id: totrans-19
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 10.2.1 安装练习
- en: 'To install the exercises:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装练习：
- en: Download and unzip `impatient-js-code.zip`
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载并解压`impatient-js-code.zip`
- en: Follow the instructions in `README.txt`
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按照`README.txt`中的说明操作
- en: 10.2.2 Running exercises
  id: totrans-23
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 10.2.2 运行练习
- en: Exercises are referred to by path in this book.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本书中通过路径引用练习。
- en: 'For example: `exercises/quizzes-exercises/first_module_test.mjs`'
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如：`exercises/quizzes-exercises/first_module_test.mjs`
- en: 'Within each file:'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在每个文件中：
- en: The first line contains the command for running the exercise.
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一行包含运行练习的命令。
- en: The following lines describe what you have to do.
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以下行描述了你需要做的事情。
- en: 10.3 Unit tests in JavaScript
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 10.3 JavaScript中的单元测试
- en: All exercises in this book are tests that are run via the test framework [Mocha](https://mochajs.org).
    This section gives a brief introduction.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的所有练习都是通过测试框架[Mocha](https://mochajs.org)运行的测试。本节简要介绍了这一点。
- en: 10.3.1 A typical test
  id: totrans-31
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 10.3.1 典型测试
- en: 'Typical test code is split into two parts:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 典型的测试代码分为两部分：
- en: 'Part 1: the code to be tested.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第1部分：要测试的代码。
- en: 'Part 2: the tests for the code.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第2部分：代码的测试。
- en: 'Take, for example, the following two files:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，以下是两个文件：
- en: '`id.mjs` (code to be tested)'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`id.mjs`（要测试的代码）'
- en: '`id_test.mjs` (tests)'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`id_test.mjs`（测试）'
- en: '10.3.1.1 Part 1: the code'
  id: totrans-38
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 10.3.1.1 第1部分：代码
- en: 'The code itself resides in `id.mjs`:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 代码本身位于`id.mjs`中：
- en: '[PRE0]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The key thing here is: everything we want to test must be exported. Otherwise,
    the test code can’t access it.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 关键是：我们想要测试的所有内容都必须被导出。否则，测试代码无法访问它。
- en: '10.3.1.2 Part 2: the tests'
  id: totrans-42
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 10.3.1.2 第2部分：测试
- en: '![](../Images/ec8e6930fbe484fc519f3aa7b812c3fd.png)  **Don’t worry about the
    exact details of tests**'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: ！[](../Images/ec8e6930fbe484fc519f3aa7b812c3fd.png) **不要担心测试的确切细节**
- en: 'You don’t need to worry about the exact details of tests: They are always implemented
    for you. Therefore, you only need to read them, but not write them.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 你不需要担心测试的确切细节：它们总是为你实现的。因此，你只需要阅读它们，而不需要编写它们。
- en: 'The tests for the code reside in `id_test.mjs`:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 代码的测试位于`id_test.mjs`中：
- en: '[PRE1]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The core of this test file is line D – [an assertion](ch_assertion-api.html):
    `assert.equal()` specifies that the expected result of `id(''abc'')` is `''abc''`.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这个测试文件的核心是D行 - [一个断言](ch_assertion-api.html)：`assert.equal()`指定`id('abc')`的预期结果是`'abc'`。
- en: 'As for the other lines:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 至于其他行：
- en: The comment at the very beginning shows the shell command for running the test.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开头的注释显示了运行测试的shell命令。
- en: 'Line A: We import the Node.js assertion library (in *strict assertion mode*).'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: A行：我们导入Node.js断言库（在*严格断言模式*下）。
- en: 'Line B: We import the function to test.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: B行：我们导入要测试的函数。
- en: 'Line C: We define a test. This is done by calling the function `test()`:'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: C行：我们定义一个测试。这是通过调用函数`test()`来完成的：
- en: 'First parameter: the name of the test.'
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一个参数：测试的名称。
- en: 'Second parameter: the test code, which is provided via an arrow function. The
    parameter `t` gives us access to AVA’s testing API (assertions, etc.).'
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二个参数：通过箭头函数提供的测试代码。参数`t`使我们能够访问AVA的测试API（断言等）。
- en: 'To run the test, we execute the following in a command line:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行测试，我们在命令行中执行以下操作：
- en: '[PRE2]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The `t` is an abbreviation for `test`. That is, the long version of this command
    is:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '`t`是`test`的缩写。也就是说，这个命令的完整版本是：'
- en: '[PRE3]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/90f73f1851c5b1baf43cb746913c09e6.png)  **Exercise: Your first
    exercise**'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: ！[](../Images/90f73f1851c5b1baf43cb746913c09e6.png) **练习：你的第一个练习**
- en: 'The following exercise gives you a first taste of what exercises are like:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 以下练习让你初尝练习的滋味：
- en: '`exercises/quizzes-exercises/first_module_test.mjs`'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`exercises/quizzes-exercises/first_module_test.mjs`'
- en: 10.3.2 Asynchronous tests in Mocha
  id: totrans-62
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 10.3.2 Mocha中的异步测试
- en: '![](../Images/ec8e6930fbe484fc519f3aa7b812c3fd.png)  **Reading**'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: ！[](../Images/ec8e6930fbe484fc519f3aa7b812c3fd.png) **阅读**
- en: You may want to postpone reading this section until you get to the chapters
    on asynchronous programming.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在学习异步编程的章节之前，你可能想推迟阅读本节。
- en: 'Writing tests for asynchronous code requires extra work: The test receives
    its results later and has to signal to Mocha that it isn’t finished yet when it
    returns. The following subsections examine three ways of doing so.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 编写异步代码的测试需要额外的工作：测试稍后接收其结果，并在返回时向Mocha发出信号表明它尚未完成。以下小节探讨了三种方法。
- en: 10.3.2.1 Asynchronicity via callbacks
  id: totrans-66
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 10.3.2.1 通过回调实现异步
- en: 'If the callback we pass to `test()` has a parameter (e.g., `done`), Mocha switches
    to callback-based asynchronicity. When we are done with our asynchronous work,
    we have to call `done`:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们传递给 `test()` 的回调有一个参数（例如 `done`），Mocha 将切换到基于回调的异步性。当我们完成异步工作时，我们必须调用 `done`：
- en: '[PRE4]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This is what `divideCallback()` looks like:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 `divideCallback()` 的样子：
- en: '[PRE5]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 10.3.2.2 Asynchronicity via Promises
  id: totrans-71
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 10.3.2.2 通过 Promises 实现异步性
- en: If a test returns a Promise, Mocha switches to Promise-based asynchronicity.
    A test is considered successful if the Promise is fulfilled and failed if the
    Promise is rejected or if a settlement takes longer than a timeout.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个测试返回一个 Promise，Mocha 将切换到基于 Promise 的异步性。如果 Promise 被实现，测试被认为是成功的，如果 Promise
    被拒绝，或者结算时间超过超时时间，测试被认为是失败的。
- en: '[PRE6]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '`dividePromise()` is implemented as follows:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '`dividePromise()` 的实现如下：'
- en: '[PRE7]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 10.3.2.3 Async functions as test “bodies”
  id: totrans-76
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 10.3.2.3 异步函数作为测试“主体”
- en: Async functions always return Promises. Therefore, an async function is a convenient
    way of implementing an asynchronous test. The following code is equivalent to
    the previous example.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 异步函数总是返回 Promises。因此，异步函数是实现异步测试的一种便捷方式。以下代码等同于之前的示例。
- en: '[PRE8]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'We don’t need to explicitly return anything: The implicitly returned `undefined`
    is used to fulfill the Promise returned by this async function. And if the test
    code throws an exception, then the async function takes care of rejecting the
    returned Promise.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不需要显式地返回任何东西：隐式返回的 `undefined` 被用来实现由这个异步函数返回的 Promise。如果测试代码抛出异常，那么异步函数会负责拒绝返回的
    Promise。
- en: '[Comments](https://github.com/rauschma/impatient-js/issues/2)'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '[注释](https://github.com/rauschma/impatient-js/issues/2)'
