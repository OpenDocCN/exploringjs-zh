["```js\nconst protoEnumSymbolKey = Symbol('protoEnumSymbolKey');\nconst protoNonEnumSymbolKey = Symbol('protoNonEnumSymbolKey');\nconst proto = Object.defineProperties({}, {\n protoEnumStringKey: {\n value: 'protoEnumStringKeyValue',\n enumerable: true,\n },\n [protoEnumSymbolKey]: {\n value: 'protoEnumSymbolKeyValue',\n enumerable: true,\n },\n protoNonEnumStringKey: {\n value: 'protoNonEnumStringKeyValue',\n enumerable: false,\n },\n [protoNonEnumSymbolKey]: {\n value: 'protoNonEnumSymbolKeyValue',\n enumerable: false,\n },\n});\n\nconst objEnumSymbolKey = Symbol('objEnumSymbolKey');\nconst objNonEnumSymbolKey = Symbol('objNonEnumSymbolKey');\nconst obj = Object.create(proto, {\n objEnumStringKey: {\n value: 'objEnumStringKeyValue',\n enumerable: true,\n },\n [objEnumSymbolKey]: {\n value: 'objEnumSymbolKeyValue',\n enumerable: true,\n },\n objNonEnumStringKey: {\n value: 'objNonEnumStringKeyValue',\n enumerable: false,\n },\n [objNonEnumSymbolKey]: {\n value: 'objNonEnumSymbolKeyValue',\n enumerable: false,\n },\n});\n```", "```js\n    > Object.keys(obj)\n    [ 'objEnumStringKey' ]\n    ```", "```js\n    > Object.values(obj)\n    [ 'objEnumStringKeyValue' ]\n    ```", "```js\n    > Object.entries(obj)\n    [ [ 'objEnumStringKey', 'objEnumStringKeyValue' ] ]\n    ```", "```js\n    > const copy = {...obj};\n    > Reflect.ownKeys(copy)\n    [ 'objEnumStringKey', objEnumSymbolKey ]\n    ```", "```js\n    > const copy = Object.assign({}, obj);\n    > Reflect.ownKeys(copy)\n    [ 'objEnumStringKey', objEnumSymbolKey ]\n    ```", "```js\n    > JSON.stringify(obj)\n    '{\"objEnumStringKey\":\"objEnumStringKeyValue\"}'\n    ```", "```js\n    const propKeys = [];\n    for (const propKey in obj) {\n     propKeys.push(propKey);\n    }\n    assert.deepEqual(\n     propKeys, ['objEnumStringKey', 'protoEnumStringKey']);\n    ```", "```js\n    > Object.getOwnPropertyNames(obj)\n    [ 'objEnumStringKey', 'objNonEnumStringKey' ]\n    ```", "```js\n    > Object.getOwnPropertySymbols(obj)\n    [ objEnumSymbolKey, objNonEnumSymbolKey ]\n    ```", "```js\n    > Reflect.ownKeys(obj)\n    [\n     'objEnumStringKey',\n     'objNonEnumStringKey',\n     objEnumSymbolKey,\n     objNonEnumSymbolKey\n    ]\n    ```", "```js\n    > Object.getOwnPropertyDescriptors(obj)\n    {\n     objEnumStringKey: {\n     value: 'objEnumStringKeyValue',\n     writable: false,\n     enumerable: true,\n     configurable: false\n     },\n     objNonEnumStringKey: {\n     value: 'objNonEnumStringKeyValue',\n     writable: false,\n     enumerable: false,\n     configurable: false\n     },\n     [objEnumSymbolKey]: {\n     value: 'objEnumSymbolKeyValue',\n     writable: false,\n     enumerable: true,\n     configurable: false\n     },\n     [objNonEnumSymbolKey]: {\n     value: 'objNonEnumSymbolKeyValue',\n     writable: false,\n     enumerable: false,\n     configurable: false\n     }\n    }\n    ```", "```js\nconst desc = Object.getOwnPropertyDescriptor.bind(Object);\n```", "```js\n{\n writable: true,\n enumerable: false,\n configurable: true,\n}\n```", "```js\n    > desc(Object.prototype, 'toString').enumerable\n    false\n    ```", "```js\n    > desc(class {foo() {}}.prototype, 'foo').enumerable\n    false\n    ```", "```js\n    > Object.getOwnPropertyDescriptor([], 'length')\n    { value: 0, writable: true, enumerable: false, configurable: false }\n    ```", "```js\n    > Object.getOwnPropertyDescriptor('', 'length')\n    { value: 0, writable: false, enumerable: false, configurable: false }\n    ```", "```js\nfunction listPropertiesViaForIn(obj) {\n const result = [];\n for (const key in obj) {\n result.push(key);\n }\n return result;\n}\n```", "```js\nconst proto = {enumerableProtoProp: 1};\nconst obj = {\n __proto__: proto,\n enumerableObjProp: 2,\n};\nassert.deepEqual(\n listPropertiesViaForIn(obj),\n ['enumerableObjProp', 'enumerableProtoProp']);\n```", "```js\nconst obj = {};\nassert.deepEqual(\n listPropertiesViaForIn(obj),\n []);\n```", "```js\nclass Person {\n constructor(first, last) {\n this.first = first;\n this.last = last;\n }\n getName() {\n return this.first + ' ' + this.last;\n }\n}\nconst jane = new Person('Jane', 'Doe');\nassert.deepEqual(\n listPropertiesViaForIn(jane),\n ['first', 'last']);\n```", "```js\n> listPropertiesViaForIn(['a', 'b'])\n[ '0', '1' ]\n> listPropertiesViaForIn('ab')\n[ '0', '1' ]\n```", "```js\nconst arr1 = ['a', 'b'];\nassert.deepEqual(\n listPropertiesViaForIn(arr1),\n ['0', '1']);\n\nconst arr2 = ['a', 'b'];\narr2.nonIndexProp = 'yes';\nassert.deepEqual(\n listPropertiesViaForIn(arr2),\n ['0', '1', 'nonIndexProp']);\n```", "```js\n    > [...['a', 'b', 'c'].keys()]\n    [ 0, 1, 2 ]\n    ```", "```js\nfunction extend(destination, source) {\n for (var property in source)\n destination[property] = source[property];\n return destination;\n}\n```", "```js\nconst proto = Object.defineProperties({}, {\n enumProtoProp: {\n value: 1,\n enumerable: true,\n },\n nonEnumProtoProp: {\n value: 2,\n enumerable: false,\n },\n});\nconst obj = Object.create(proto, {\n enumObjProp: {\n value: 3,\n enumerable: true,\n },\n nonEnumObjProp: {\n value: 4,\n enumerable: false,\n },\n});\n\nassert.deepEqual(\n extend({}, obj),\n {enumObjProp: 3, enumProtoProp: 1});\n```", "```js\n    ExperimentalWarning: The fs.promises API is experimental\n    ```", "```js\nclass Point {\n static fromJSON(json) {\n return new Point(json[0], json[1]);\n }\n constructor(x, y) {\n this.x = x;\n this.y = y;\n }\n toJSON() {\n return [this.x, this.y];\n }\n}\nassert.equal(\n JSON.stringify(new Point(8, -3)),\n '[8,-3]'\n);\n```"]