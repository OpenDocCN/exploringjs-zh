- en: 7 Updating data destructively and non-destructively
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://exploringjs.com/deep-js/ch_updating-destructively-and-nondestructively.html](https://exploringjs.com/deep-js/ch_updating-destructively-and-nondestructively.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '7.1 [Examples: updating an object destructively and non-destructively](ch_updating-destructively-and-nondestructively.html#examples-updating-an-object-destructively-and-non-destructively)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '7.2 [Examples: updating an Array destructively and non-destructively](ch_updating-destructively-and-nondestructively.html#examples-updating-an-array-destructively-and-non-destructively)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7.3 [Manual deep updating](ch_updating-destructively-and-nondestructively.html#manual-deep-updating)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7.4 [Implementing generic deep updating](ch_updating-destructively-and-nondestructively.html#implementing-generic-deep-updating)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we learn about two different ways of updating data:'
  prefs: []
  type: TYPE_NORMAL
- en: A *destructive update* of data mutates the data so that it has the desired form.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A *non-destructive update* of data creates a copy of the data that has the desired
    form.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The latter way is similar to first making a copy and then changing it destructively,
    but it does both at the same time.
  prefs: []
  type: TYPE_NORMAL
- en: '7.1 Examples: updating an object destructively and non-destructively'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The following code shows a function that updates object properties destructively
    and uses it on an object.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The following code demonstrates non-destructive updating of an object:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Spreading makes `setPropertyNonDestructively()` more concise:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Both versions of `setPropertyNonDestructively()` update *shallowly*: They only
    change the top level of an object.'
  prefs: []
  type: TYPE_NORMAL
- en: '7.2 Examples: updating an Array destructively and non-destructively'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The following code shows a function that updates Array elements destructively
    and uses it on an Array.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The following code demonstrates non-destructive updating of an Array:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '`.slice()` and spreading make `setElementNonDestructively()` more concise:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Both versions of `setElementNonDestructively()` update *shallowly*: They only
    change the top level of an Array.'
  prefs: []
  type: TYPE_NORMAL
- en: 7.3 Manual deep updating
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: So far, we have only updated data shallowly. Let’s tackle deep updating. The
    following code shows how to do it manually. We are changing name and employer.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 7.4 Implementing generic deep updating
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The following function implements generic deep updating.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: If we see `value` as the root of a tree that we are updating, then `deepUpdate()`
    only deeply changes a single branch (line A and C). All other branches are copied
    shallowly (line B and D).
  prefs: []
  type: TYPE_NORMAL
- en: 'This is what using `deepUpdate()` looks like:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '[Comments](https://github.com/rauschma/deep-js/issues/7)'
  prefs: []
  type: TYPE_NORMAL
