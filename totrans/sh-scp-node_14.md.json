["```js\nconsole.log('String: %s Number: %d Percent: %%', 'abc', 123);\n\nconst obj = {one: 1, two: 2};\nconsole.log('JSON: %j Object: %o', obj, obj);\n\n// Output:\n// 'String: abc Number: 123 Percent: %'\n// 'JSON: {\"one\":1,\"two\":2} Object: { one: 1, two: 2 }'\n```", "```js\nprocess.stdout.write('two');\nprocess.stdout.write(' words');\nprocess.stdout.write('\\n');\n```", "```js\nconsole.log('two words');\n```", "```js\nimport {Writable} from 'node:stream';\nconst webOut = Writable.toWeb(process.stdout);\nconst writer = webOut.getWriter();\ntry {\n await writer.write('First line\\n');\n await writer.write('Second line\\n');\n await writer.close();\n} finally {\n writer.releaseLock()\n}\n```", "```js\n// Switch to text mode (otherwise we get chunks of binary data)\nprocess.stdin.setEncoding('utf-8');\nfor await (const chunk of process.stdin) {\n console.log('>', chunk);\n}\n```", "```js\nimport {Readable} from 'node:stream';\n// Switch to text mode (otherwise we get chunks of binary data)\nprocess.stdin.setEncoding('utf-8');\nconst webIn = Readable.toWeb(process.stdin);\nfor await (const chunk of webIn) {\n console.log('>', chunk);\n}\n```", "```js\nimport * as fs from 'node:fs';\nimport * as readline from 'node:readline/promises';\n\nconst rl = readline.createInterface({\n input: process.stdin,\n output: process.stdout,\n});\n\nconst filePath = await rl.question('Please enter a file path: ');\nfs.writeFileSync(filePath, 'Hi!', {encoding: 'utf-8'})\n\nrl.close();\n```"]