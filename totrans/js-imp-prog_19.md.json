["```js\n> typeof false\n'boolean'\n> typeof true\n'boolean'\n```", "```js\nif (value) {}\n```", "```js\nif (value === true) {}\n```", "```js\nif (Boolean(value) === true) {}\n```", "```js\n> Boolean('abc')\ntrue\n> Boolean([])\ntrue\n> Boolean({})\ntrue\n```", "```js\nif (x) {\n // x is truthy\n}\n\nif (!x) {\n // x is falsy\n}\n\nif (x) {\n // x is truthy\n} else {\n // x is falsy\n}\n\nconst result = x ? 'truthy' : 'falsy';\n```", "```js\nif (obj.prop !== undefined) {\n // obj has property .prop\n}\n```", "```js\nif (obj.prop) {\n // obj has property .prop\n}\n```", "```js\nif (obj.prop) {\n // obj has property .prop\n}\n```", "```js\nfunction func(x) {\n if (!x) {\n throw new Error('Missing parameter x');\n }\n // \u00b7\u00b7\u00b7\n}\n```", "```js\nif (x === undefined) {\n throw new Error('Missing parameter x');\n}\n```", "```js\nfunction readFile(fileDesc) {\n if (!fileDesc.path) {\n throw new Error('Missing property: .path');\n }\n // \u00b7\u00b7\u00b7\n}\nreadFile({ path: 'foo.txt' }); // no error\n```", "```js\nif (! ('path' in fileDesc)) {\n throw new Error('Missing property: .path');\n}\n```", "```js\n\u00abcondition\u00bb ? \u00abthenExpression\u00bb : \u00abelseExpression\u00bb\n```", "```js\n> true ? 'yes' : 'no'\n'yes'\n> false ? 'yes' : 'no'\n'no'\n> '' ? 'yes' : 'no'\n'no'\n```", "```js\nconst x = (true ? console.log('then') : console.log('else'));\n\n// Output:\n// 'then'\n```", "```js\n> 12 || 'hello'\n12\n> 0 || 'hello'\n'hello'\n```", "```js\nconst x = false && console.log('hello');\n// No output\n```", "```js\nconst x = true && console.log('hello');\n\n// Output:\n// 'hello'\n```", "```js\na && b\n!a ? a : b\n```", "```js\n> false && true\nfalse\n> false && 'abc'\nfalse\n\n> true && false\nfalse\n> true && 'abc'\n'abc'\n\n> '' && 'abc'\n''\n```", "```js\na ||\u00a0b\na ? a : b\n```", "```js\n> true || false\ntrue\n> true || 'abc'\ntrue\n\n> false || true\ntrue\n> false || 'abc'\n'abc'\n\n> 'abc' || 'def'\n'abc'\n```", "```js\nconst valueToUse = receivedValue || defaultValue;\n```", "```js\n> !false\ntrue\n> !true\nfalse\n\n> !0\ntrue\n> !123\nfalse\n\n> !''\ntrue\n> !'abc'\nfalse\n```"]