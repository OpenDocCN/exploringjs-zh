["```js\n{\n \u00b7\u00b7\u00b7\n \"scripts\": {\n \"tsc\": \"tsc\",\n \"tscwatch\": \"tsc --watch\",\n \"tscclean\": \"shx rm -rf ./dist/*\"\n },\n \u00b7\u00b7\u00b7\n}\n```", "```js\nnpm run <script-name>\n```", "```js\nnpm run tscwatch\n```", "```js\ntsc --watch\n```", "```js\nnpm -s run <script-name>\n```", "```js\n. <(npm completion)\n```", "```js\n\"scripts\": {\n \"tsc\": \"tsc\",\n \"tscwatch\": \"tsc --watch\",\n \"serve\": \"serve ./site/\"\n}\n```", "```js\n% npm run\nScripts available via `npm run-script`:\n  tsc\n    tsc\n  tscwatch\n    tsc --watch\n  serve\n    serve ./site/\n```", "```js\n \"scripts\": {\n \"help\": \"scripts-help -w 40\",\n \"\\n========== Building ==========\": \"\",\n \"tsc\": \"tsc\",\n \"tscwatch\": \"tsc --watch\",\n \"\\n========== Serving ==========\": \"\",\n \"serve\": \"serve ./site/\"\n },\n```", "```js\n% npm run\nScripts available via `npm run-script`:\n  help\n    scripts-help -w 40\n\n========== Building ==========\n\n  tsc\n    tsc\n  tscwatch\n    tsc --watch\n\n========== Serving ==========\n\n  serve\n    serve ./site/\n```", "```js\n\"scripts-help\": {\n \"tsc\": \"Compile the TypeScript to JavaScript.\",\n \"tscwatch\": \"Watch the TypeScript source code [...]\",\n \"serve\": \"Serve the generated website via a local server.\"\n}\n```", "```js\n% npm -s run help\nPackage \u201cdemo\u201d\n\n\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\n\u2551 help \u2502 scripts-help -w 40       \u2551\n\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d\n\nBuilding\n\n\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\n\u2551 tsc      \u2502 Compile the TypeScript to JavaScript.    \u2551\n\u255f\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2562\n\u2551 tscwatch \u2502 Watch the TypeScript source code and     \u2551\n\u2551          \u2502 compile it incrementally when and if     \u2551\n\u2551          \u2502 there are changes.                       \u2551\n\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d\n\nServing\n\n\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\n\u2551 serve \u2502 Serve the generated website via a local  \u2551\n\u2551       \u2502 server.                                  \u2551\n\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d\n```", "```js\n\"scripts\": {\n \"hello\": \"echo hello\",\n \"prehello\": \"echo BEFORE\",\n \"posthello\": \"echo AFTER\"\n},\n```", "```js\n% npm -s run hello\nBEFORE\nhello\nAFTER\n```", "```js\nnode -p <expr>\n```", "```js\n% node -p \"'hello everyone!'.toUpperCase()\" \nHELLO EVERYONE!\n```", "```js\n\"cwd\": \"node -p \\\"process.cwd()\\\"\"\n```", "```js\n% cd /Users/robin/new-package/src/util \n% npm -s run cwd\n/Users/robin/new-package\n```", "```js\n\"bin-dirs\": \"node -p \\\"JS\\\"\"\n```", "```js\n(process.env.PATH ?? process.env.Path)\n.split(path.delimiter)\n.filter(p => p.includes('.bin'))\n```", "```js\n% npm -s run bin-dirs\n[\n  '/Users/robin/new-package/node_modules/.bin',\n  '/Users/robin/node_modules/.bin',\n  '/Users/node_modules/.bin',\n  '/node_modules/.bin'\n]\n```", "```js\n>npm -s run bin-dirs\n[\n  'C:\\\\Users\\\\charlie\\\\new-package\\\\node_modules\\\\.bin',\n  'C:\\\\Users\\\\charlie\\\\node_modules\\\\.bin',\n  'C:\\\\Users\\\\node_modules\\\\.bin',\n  'C:\\\\node_modules\\\\.bin'\n]\n```", "```js\nTERM_PROGRAM=Apple_Terminal\nSHELL=/bin/zsh\nTMPDIR=/var/folders/ph/sz0384m11vxf5byk12fzjms40000gn/T/\nUSER=robin\nPATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin\nPWD=/Users/robin/new-package\nHOME=/Users/robin\nLOGNAME=robin\n\u00b7\u00b7\u00b7\n```", "```js\nPath=C:\\Windows;C:\\Users\\charlie\\AppData\\Roaming\\npm;\u00b7\u00b7\u00b7\nPATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC\nPROMPT=$P$G\nTEMP=C:\\Users\\charlie\\AppData\\Local\\Temp\nTMP=C:\\Users\\charlie\\AppData\\Local\\Temp\nUSERNAME=charlie\nUSERPROFILE=C:\\Users\\charlie\n\u00b7\u00b7\u00b7\n```", "```js\nnpm run env\n```", "```js\n{\n \"name\": \"@my-scope/new-package\",\n \"version\": \"1.0.0\",\n \"bin\": {\n \"hello\": \"./hello.mjs\"\n },\n \"config\": {\n \"stringProp\": \"yes\",\n \"arrayProp\": [\"a\", \"b\", \"c\"],\n \"objectProp\": {\n \"one\": 1,\n \"two\": 2\n }\n }\n}\n```", "```js\nnpm run env | grep npm_ | sort\n```", "```js\nnpm_lifecycle_event: 'env',\nnpm_lifecycle_script: 'env',\n```", "```js\nnpm_config_cache: '/Users/robin/.npm',\nnpm_config_global_prefix: '/usr/local',\nnpm_config_globalconfig: '/usr/local/etc/npmrc',\nnpm_config_local_prefix: '/Users/robin/new-package',\nnpm_config_prefix: '/usr/local'\nnpm_config_user_agent: 'npm/8.15.0 node/v18.7.0 darwin arm64 workspaces/false',\nnpm_config_userconfig: '/Users/robin/.npmrc',\n```", "```js\nnpm_package_json: '/Users/robin/new-package/package.json',\nnpm_package_name: '@my-scope/new-package',\nnpm_package_version: '1.0.0',\n```", "```js\nnpm_package_bin_hello: 'hello.mjs',\n```", "```js\nnpm_package_config_arrayProp: 'a\\n\\nb\\n\\nc',\nnpm_package_config_objectProp_one: '1',\nnpm_package_config_objectProp_two: '2',\nnpm_package_config_stringProp: 'yes',\n```", "```js\nnpm_command: 'run-script',\nnpm_execpath: '/usr/local/lib/node_modules/npm/bin/npm-cli.js',\nnpm_node_execpath: '/usr/local/bin/node',\n```", "```js\n{\n \"scripts\": {\n \"hi:unix\": \"echo $\u200bnpm_package_config_hi\",\n \"hi:windows\": \"echo %\u200bnpm_package_config_hi%\"\n },\n \"config\": {\n \"hi\": \"HELLO\"\n }\n}\n```", "```js\n\"scripts\": {\n \"hi\": \"env-var echo {{npm_package_config_hi}}\"\n}\n```", "```js\n\"scripts\": {\n \"build\": \"cross-env FIRST=one SECOND=two node ./build.mjs\"\n}\n```", "```js\n# Comment\nSECRET_HOST=\"https://example.com\"\nSECRET_KEY=\"123456789\" # another comment\n```", "```js\n    node -r dotenv/config app.mjs\n    ```", "```js\n    import dotenv from 'dotenv';\n    dotenv.config();\n    console.log(process.env);\n    ```", "```js\n    # Loads `.env` and runs an arbitrary shell script.\n    # If there are CLI options, we need to use `--`.\n    nodenv --exec node -- -p process.env.SECRET\n\n    # Loads `.env` and uses `node` to run `script.mjs`.\n    nodenv script.mjs\n    ```", "```js\n    # Loads `.env` and runs an arbitrary shell script\n    env-cmd node -p process.env.SECRET\n    ```", "```js\n{\n \u00b7\u00b7\u00b7\n \"scripts\": {\n \"args\": \"log-args\"\n },\n \"dependencies\": {\n \"log-args\": \"^1.0.0\"\n }\n}\n```", "```js\nfor (const [key,value] of Object.entries(process.env)) {\n if (key.startsWith('npm_config_arg')) {\n console.log(`${key}=${JSON.stringify(value)}`);\n }\n}\nconsole.log(process.argv.slice(2));\n```", "```js\n% npm -s run args three positional arguments\n[ 'three', 'positional', 'arguments' ]\n```", "```js\n% npm -s run args --arg1='first arg' --arg2='second arg'\nnpm_config_arg2=\"second arg\"\nnpm_config_arg1=\"first arg\"\n[]\n```", "```js\n% npm -s run args -- --arg1='first arg' --arg2='second arg' \n[ '--arg1=first arg', '--arg2=second arg' ]\n```", "```js\n% npm -s run -- args --arg1='first arg' --arg2='second arg' \n[ '--arg1=first arg', '--arg2=second arg' ]\n```", "```js\n{\n \"name\": \"@my-scope/new-package\",\n \"version\": \"1.0.0\",\n \"scripts\": {\n \"hello\": \"echo Hello\",\n \"err\": \"more does-not-exist.txt\"\n },\n \u00b7\u00b7\u00b7\n}\n```", "```js\n% npm run hello\n\n> @my-scope/new-package@1.0.0 hello\n> echo Hello\n\nHello\n```", "```js\n% npm run err      \n\n> @my-scope/new-package@1.0.0 err\n> more does-not-exist.txt\n\ndoes-not-exist.txt: No such file or directory\n```", "```js\n% npm -s run hello\nHello\n\n% npm -s run err\ndoes-not-exist.txt: No such file or directory\n```", "```js\n% npm -s run abc\n%\n```", "```js\n% npm --loglevel error run abc\nnpm ERR! Missing script: \"abc\"\nnpm ERR! \nnpm ERR! To see a list of scripts, run:\nnpm ERR!   npm run\n\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     /Users/robin/.npm/_logs/2072-08-30T14_59_40_474Z-debug-0.log\n```", "```js\n% npm -s run\n%\n```", "```js\n% npm config get cache\n/Users/robin/.npm\n```", "```js\n% ls -1 /Users/robin/.npm/_logs\n2072-08-28T11_44_38_499Z-debug-0.log\n2072-08-28T11_45_45_703Z-debug-0.log\n2072-08-28T11_52_04_345Z-debug-0.log\n```", "```js\n0 verbose cli /usr/local/bin/node /usr/local/bin/npm\n1 info using npm@8.15.0\n\u00b7\u00b7\u00b7\n33 silly logfile done cleaning log files\n34 timing command:run Completed in 9ms\n\u00b7\u00b7\u00b7\n```", "```js\n34 timing command:run Completed in 7ms\n35 verbose exit 1\n36 timing npm Completed in 28ms\n37 verbose code 1\n```", "```js\n34 timing command:run Completed in 7ms\n35 verbose exit 0\n36 timing npm Completed in 26ms\n37 info ok\n```", "```js\n% npm config list --long | grep log\nloglevel = \"notice\"\nlogs-dir = null\nlogs-max = 10\n```", "```js\n    npm config get loglevel\n    ```", "```js\n    npm config set loglevel silent\n    ```", "```js\n    npm config delete loglevel\n    ```", "```js\nnpm --loglevel silent run build\n```", "```js\n    \"dir\": \"mkdir \\\"\\my dir\"\"\n    ```", "```js\n% ls unknown && echo \"SUCCESS\" || echo \"FAILURE\"\nls: unknown: No such file or directory\nFAILURE\n\n% ls package.json && echo \"SUCCESS\" || echo \"FAILURE\"\npackage.json\nSUCCESS\n```", "```js\n{\n \u00b7\u00b7\u00b7\n \"scripts\": {\n \"hello\": \"echo Hello\",\n \"err\": \"more does-not-exist.txt\"\n }\n}\n```", "```js\n% npm -s run hello ; echo $?\nHello\n0\n% npm -s run err ; echo $?\ndoes-not-exist.txt: No such file or directory\n1\n```", "```js\n{\n \"scripts\": {\n \"hi1\": \"./node_modules/.bin/cowsay Hello\",\n \"hi2\": \"cowsay Hello\",\n \"hi3\": \"npx cowsay Hello\"\n },\n \"dependencies\": {\n \"cowsay\": \"^1.5.0\"\n }\n}\n```", "```js\n\"build\": \"node ./build.mjs\"\n```", "```js\n# Print a string to the terminal (cross-platform echo)\nnode -p \"'How are you?'\"\n\n# Print the value of an environment variable\n# (Alas, we can\u2019t change variables via `process.env`)\nnode -p process.env.USER # only Unix\nnode -p process.env.USERNAME # only Windows\nnode -p \"process.env.USER ?? process.env.USERNAME\"\n\n# Print all environment variables\nnode -p process.env\n\n# Print the current working directory\nnode -p \"process.cwd()\"\n\n# Print the path of the current home directory\nnode -p \"os.homedir()\"\n\n# Print the path of the current temporary directory\nnode -p \"os.tmpdir()\"\n\n# Print the contents of a text file\nnode -p \"fs.readFileSync('package.json', 'utf-8')\"\n\n# Write a string to a file\nnode -e \"fs.writeFileSync('file.txt', 'Text content', 'utf-8')\"\n```", "```js\n`line 1${os.EOL}line2${os.EOL}`\n```", "```js\n    concurrently \"npm run clean\" \"npm run build\"\n    ```", "```js\n        npm-run-all clean lint build\n        npm run clean && npm run lint && npm run build\n        ```", "```js\n        npm-run-all --parallel lint build\n        ```", "```js\n        npm-run-all \"watch:*\"\n        npm-run-all --parallel \"watch:*\"\n        ```", "```js\n\"create-asset-dir\": \"shx mkdir ./assets\"\n```", "```js\n\"remove-asset-dir\": \"shx rm -rf ./assets\"\n```", "```js\n\"tscclean\": \"shx rm -rf \\\"./dist/*\\\"\"\n```", "```js\n\"copy-index\": \"shx cp ./html/index.html ./out/index.html\"\n```", "```js\n\"remove-index\": \"shx rm ./out/index.html\"\n```", "```js\ntrash tmp-file.txt\ntrash tmp-dir\ntrash \"*.jpg\"\n```", "```js\ncopyfiles --up 1 \"./ts/**/*.{css,png,svg,gif}\" ./dist\n```", "```js\nmy-pkg/ts/client/picker.ts  -> my-pkg/dist/client/picker.js\n```", "```js\nmy-pkg/ts/client/picker.css -> my-pkg/dist/client/picker.css\nmy-pkg/ts/client/icon.svg   -> my-pkg/dist/client/icon.svg\n```", "```js\nonchange 'app/**/*.js' 'test/**/*.js' -- npm test\n```", "```js\n{\n \"scripts\": {\n // If NODE_ENV is missing, the default is \"development\"\n \"build\": \"per-env\",\n\n \"build:development\": \"webpack -d --watch\",\n \"build:staging\": \"webpack -p\",\n \"build:production\": \"webpack -p\"\n },\n // Processes spawned by `per-env` inherit environment-specific\n // variables, if defined.\n \"per-env\": {\n \"production\": {\n \"DOCKER_USER\": \"my\",\n \"DOCKER_REPO\": \"project\"\n }\n }\n}\n```", "```js\n{\n \"scripts\": {\n \"user\": \"cross-os user\"\n },\n \"cross-os\": {\n \"user\": {\n \"darwin\": \"echo $USER\",\n \"win32\": \"echo %USERNAME%\",\n \"linux\": \"echo $USER\"\n }\n },\n \u00b7\u00b7\u00b7\n}\n```"]