- en: 17 Math
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://exploringjs.com/impatient-js/ch_math.html](https://exploringjs.com/impatient-js/ch_math.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: 17.1 [Data properties](ch_math.html#data-properties)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 17.2 [Exponents, roots, logarithms](ch_math.html#exponents-roots-logarithms)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 17.3 [Rounding](ch_math.html#math-rounding)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 17.4 [Trigonometric Functions](ch_math.html#trigonometric-functions)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 17.5 [Various other functions](ch_math.html#various-other-functions)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 17.6 [Sources](ch_math.html#sources-1)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: '`Math` is an object with data properties and methods for processing numbers.
    You can see it as a poor man’s module: It was created long before JavaScript had
    modules.'
  prefs: []
  type: TYPE_NORMAL
- en: 17.1 Data properties
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '`Math.E: number` ^([ES1])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Euler’s number, base of the natural logarithms, approximately 2.7182818284590452354.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`Math.LN10: number` ^([ES1])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The natural logarithm of 10, approximately 2.302585092994046.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`Math.LN2: number` ^([ES1])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The natural logarithm of 2, approximately 0.6931471805599453.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`Math.LOG10E: number` ^([ES1])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The logarithm of *e* to base 10, approximately 0.4342944819032518.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`Math.LOG2E: number` ^([ES1])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The logarithm of *e* to base 2, approximately 1.4426950408889634.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`Math.PI: number` ^([ES1])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The mathematical constant π, ratio of a circle’s circumference to its diameter,
    approximately 3.1415926535897932.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`Math.SQRT1_2: number` ^([ES1])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The square root of 1/2, approximately 0.7071067811865476.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`Math.SQRT2: number` ^([ES1])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The square root of 2, approximately 1.4142135623730951.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 17.2 Exponents, roots, logarithms
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '`Math.cbrt(x: number): number` ^([ES6])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns the cube root of `x`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`Math.exp(x: number): number` ^([ES1])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns *e*^(`x`) (*e* being Euler’s number). The inverse of `Math.log()`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`Math.expm1(x: number): number` ^([ES6])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns `Math.exp(x)-1`. The inverse of `Math.log1p()`. Very small numbers (fractions
    close to 0) are represented with a higher precision. Therefore, this function
    returns more precise values whenever `.exp()` returns values close to 1.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`Math.log(x: number): number` ^([ES1])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns the natural logarithm of `x` (to base *e*, Euler’s number). The inverse
    of `Math.exp()`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`Math.log1p(x: number): number` ^([ES6])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns `Math.log(1 + x)`. The inverse of `Math.expm1()`. Very small numbers
    (fractions close to 0) are represented with a higher precision. Therefore, you
    can provide this function with a more precise argument whenever the argument for
    `.log()` is close to 1.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`Math.log10(x: number): number` ^([ES6])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns the logarithm of `x` to base 10\. The inverse of `10 ** x`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`Math.log2(x: number): number` ^([ES6])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns the logarithm of `x` to base 2\. The inverse of `2 ** x`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`Math.pow(x: number, y: number): number` ^([ES1])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns `x`^(`y`), `x` to the power of `y`. The same as `x ** y`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`Math.sqrt(x: number): number` ^([ES1])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns the square root of `x`. The inverse of `x ** 2`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 17.3 Rounding
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Rounding means converting an arbitrary number to an integer (a number without
    a decimal fraction). The following functions implement different approaches to
    rounding.
  prefs: []
  type: TYPE_NORMAL
- en: '`Math.ceil(x: number): number` ^([ES1])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns the smallest (closest to −∞) integer `i` with `x` ≤ `i`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`Math.floor(x: number): number` ^([ES1])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns the largest (closest to +∞) integer `i` with `i` ≤ `x`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`Math.round(x: number): number` ^([ES1])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Returns the integer that is closest to `x`. If the decimal fraction of `x`
    is `.5` then `.round()` rounds up (to the integer closer to positive infinity):'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`Math.trunc(x: number): number` ^([ES6])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Removes the decimal fraction of `x` and returns the resulting integer.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Tbl. [12](#tbl:math-rounding-functions) shows the results of the rounding functions
    for a few representative inputs.
  prefs: []
  type: TYPE_NORMAL
- en: 'Table 12: Rounding functions of `Math`. Note how things change with negative
    numbers because “larger” always means “closer to positive infinity”.'
  prefs: []
  type: TYPE_NORMAL
- en: '|  | `-2.9` | `-2.5` | `-2.1` | `2.1` | `2.5` | `2.9` |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| `Math.floor` | `-3` | `-3` | `-3` | `2` | `2` | `2` |'
  prefs: []
  type: TYPE_TB
- en: '| `Math.ceil` | `-2` | `-2` | `-2` | `3` | `3` | `3` |'
  prefs: []
  type: TYPE_TB
- en: '| `Math.round` | `-3` | `-2` | `-2` | `2` | `3` | `3` |'
  prefs: []
  type: TYPE_TB
- en: '| `Math.trunc` | `-2` | `-2` | `-2` | `2` | `2` | `2` |'
  prefs: []
  type: TYPE_TB
- en: 17.4 Trigonometric Functions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: All angles are specified in radians. Use the following two functions to convert
    between degrees and radians.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '`Math.acos(x: number): number` ^([ES1])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns the arc cosine (inverse cosine) of `x`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`Math.acosh(x: number): number` ^([ES6])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns the inverse hyperbolic cosine of `x`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`Math.asin(x: number): number` ^([ES1])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns the arc sine (inverse sine) of `x`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`Math.asinh(x: number): number` ^([ES6])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns the inverse hyperbolic sine of `x`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`Math.atan(x: number): number` ^([ES1])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns the arc tangent (inverse tangent) of `x`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`Math.atanh(x: number): number` ^([ES6])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns the inverse hyperbolic tangent of `x`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`Math.atan2(y: number, x: number): number` ^([ES1])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns the arc tangent of the quotient y/x.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`Math.cos(x: number): number` ^([ES1])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns the cosine of `x`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`Math.cosh(x: number): number` ^([ES6])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns the hyperbolic cosine of `x`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`Math.hypot(...values: number[]): number` ^([ES6])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Returns the square root of the sum of the squares of `values` (Pythagoras’
    theorem):'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`Math.sin(x: number): number` ^([ES1])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns the sine of `x`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`Math.sinh(x: number): number` ^([ES6])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns the hyperbolic sine of `x`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`Math.tan(x: number): number` ^([ES1])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns the tangent of `x`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`Math.tanh(x: number): number;` ^([ES6])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns the hyperbolic tangent of `x`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 17.5 Various other functions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '`Math.abs(x: number): number` ^([ES1])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns the absolute value of `x`.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`Math.clz32(x: number): number` ^([ES6])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Counts the leading zero bits in the 32-bit integer `x`. Used in DSP algorithms.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`Math.max(...values: number[]): number` ^([ES1])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Converts `values` to numbers and returns the largest one.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`Math.min(...values: number[]): number` ^([ES1])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Converts `values` to numbers and returns the smallest one.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`Math.random(): number` ^([ES1])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns a pseudo-random number `n` where 0 ≤ `n` < 1.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`Math.sign(x: number): number` ^([ES6])'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Returns the sign of a number:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 17.6 Sources
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Wikipedia
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[TypeScript’s built-in typings](https://github.com/Microsoft/TypeScript/blob/master/lib/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[MDN web docs for JavaScript](https://developer.mozilla.org/en-US/docs/Web/JavaScript)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ECMAScript language specification](https://tc39.github.io/ecma262/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Comments](https://github.com/rauschma/impatient-js/issues/12)'
  prefs: []
  type: TYPE_NORMAL
